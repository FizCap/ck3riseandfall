 # Developer debug decision: decrease realm stability by 10 for testing
    riseandfall_debug_reduce_stability_10 = {
        picture = {
            reference = "gfx/interface/illustrations/decisions/decision_misc.dds"
        }
        sort_order = 100
        desc = riseandfall_debug_reduce_stability_10_desc
        selection_tooltip = riseandfall_debug_reduce_stability_10_tooltip
        decision_group_type = admin

        is_shown = {
            always = no
        }

        is_valid = {
            always = yes
        }

        effect = {
            if = {
                limit = { NOT = { has_variable = riseandfall_realm_stability_score } }
                set_variable = { name = riseandfall_realm_stability_score value = 0 }
            }
            # For debugging, force stability to 0
            set_variable = { name = riseandfall_realm_stability_score value = 0 }
            clamp_variable = { name = riseandfall_realm_stability_score min = 0 max = 100 }
            round_variable = { name = riseandfall_realm_stability_score }
            # Recompute normally (updates target/current smoothing state)
            riseandfall_calculate_realm_stability_se = yes
            # Ensure smoothing/target don't immediately nudge the score away from 0
            set_variable = { name = riseandfall_realm_stability_target value = 0 }
            set_variable = { name = riseandfall_realm_stability_score value = 0 }
            # Reset adjustment months so smoothing won't apply until next tick
            set_variable = { name = riseandfall_rs_adjust_months value = 0 }
            set_variable = { name = riseandfall_realm_stability_predicted_change value = 0 }
        }

        ai_potential = {
        }

        ai_will_do = {
            base = 0
        }
    }

    # Developer debug decision: fire low stability random event for testing
    riseandfall_debug_fire_low_stability_event = {
        picture = {
            reference = "gfx/interface/illustrations/decisions/decision_misc.dds"
        }
        sort_order = 101
        desc = riseandfall_debug_fire_low_stability_event_desc
        selection_tooltip = riseandfall_debug_fire_low_stability_event_tooltip
        decision_group_type = admin

        is_shown = {
            always = no
        }

        is_valid = {
            always = yes
        }

        effect = {
            riseandfall_low_stability_random_event = yes
        }

        ai_potential = {
        }

        ai_will_do = {
            base = 0
        }
    }


