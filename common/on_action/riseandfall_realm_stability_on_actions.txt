# On_actions for the Realm Stability mechanic
# This file isolates the realm stability on_action so it can be enabled, disabled,
# or scheduled independently from adventurer logic.

yearly_global_pulse = {
    on_actions = {
        riseandfall_yearly_realm_stability
    }
}

on_game_start_after_lobby = {
    on_actions = {
        riseandfall_yearly_realm_stability
    }
}

on_war_won_attacker = {
    on_actions = {
        riseandfall_war_won_attacker
    }
}

on_war_won_defender = {
    on_actions = {
        riseandfall_war_won_defender
    }
}

# React to characters gaining titles by inheritance so newly-inherited rulers
# get a computed realm stability value instead of the engine defaulting them to 100.
on_title_gain_inheritance = {
    on_actions = {
        riseandfall_on_title_gain_inheritance
    }
}

on_title_gain = {
    on_actions = {
        riseandfall_on_title_gain_inheritance
    }
}

riseandfall_on_title_gain_inheritance = {
    # Expected scope: character (the inheritor)
    trigger = {
        has_game_rule = riseandfall_realm_stability_enabled
    }
    effect = {
        # Only run the calculation for characters who don't already have a stability score
        # and who actually hold a landed title (avoid courtiers inheriting minor artifacts).
        if = {
            limit = { NOT = { has_variable = riseandfall_realm_stability_score } }
            if = { limit = { holds_landed_title = yes } riseandfall_calculate_realm_stability_se = yes }
        }
    }
}

riseandfall_yearly_realm_stability = {
    trigger = {
        has_game_rule = riseandfall_realm_stability_enabled
    }
    effect = {
        every_ruler = {
            limit = {
                is_landed = yes
                primary_title.tier >= tier_county
            }
            save_scope_as = independent_ruler
            scope:independent_ruler = {
                riseandfall_calculate_realm_stability_se = yes
            }
        }
    }
}
# React to wars being won so we can apply immediate +5/-5 war penalties
riseandfall_war_won_attacker = {
    trigger = { has_game_rule = riseandfall_realm_stability_enabled }
    effect = {
        # Root scope: none; event provides scope:attacker and scope:defender
    # Apply loss to defender. Apply victory effect to attacker only when the
    # war is NOT a peasant rebellion (peasant wars should not count as valid wins).
    scope:defender = { riseandfall_war_loss_se = yes }
    if = { limit = { scope:war = { NOT = { using_cb = peasant_war } } } scope:attacker = { riseandfall_war_victory_se = yes } }
    }
}

riseandfall_war_won_defender = {
    trigger = { has_game_rule = riseandfall_realm_stability_enabled }
    effect = {
        # Root scope: none; event provides scope:attacker and scope:defender
    # Apply loss to attacker. Apply victory effect to defender only for non-peasant wars
    scope:attacker = { riseandfall_war_loss_se = yes }
    if = { limit = { scope:war = { NOT = { using_cb = peasant_war } } } scope:defender = { riseandfall_war_victory_se = yes } }
    }
}