riseandfall_check_dynasty_for_adventurers_se = {
    # Expecting character scope (independent ruler). Check their dynasty members.
    if = {
        limit = { has_dynasty = yes }
        dynasty = {
            every_dynasty_member = {
                limit = {
                    is_landed = no
                    is_imprisoned = no
                    NOT = { has_government = landless_adventurer_government }
                    # Exclude anyone who is an heir of the independent ruler (primary/designated/player)
                    NOT = { is_heir_of = scope:independent_ruler }
                    # Exclude religious/scholarly characters who should not become adventurers
                    NOT = {
                        OR = {
                            has_trait = devoted
                            has_trait = incapable
                            has_trait = maester
                            has_trait = septon
                            has_trait = high_septon
                            has_trait = eunuch
                            has_trait = beardless_eunuch
                            has_trait = nightswatch
                            has_trait = cowardly
                        }
                    }
                    # Cowardly check moved to riseandfall_turn_into_adventurer_se with other trait checks
                    age >= 16
                    any_claim = { tier >= tier_kingdom }
                }

                # Roll per individual dynasty member for adventurer creation
                # Base chance is 2%; trait bonuses: dragonrider +5%, ambitious +5%, brave +2%
                set_variable = { name = rf_adventurer_trait_chance value = 0 }
                if = { limit = { has_trait = dragonrider } change_variable = { name = rf_adventurer_trait_chance add = 5 } }
                if = { limit = { has_trait = ambitious } change_variable = { name = rf_adventurer_trait_chance add = 5 } }
                if = { limit = { has_trait = brave } change_variable = { name = rf_adventurer_trait_chance add = 2 } }

                # Final chance = base 2 + trait bonuses, clamp to 100
                set_variable = { name = rf_adventurer_final_chance value = 2 }
                change_variable = { name = rf_adventurer_final_chance add = var:rf_adventurer_trait_chance }
                if = { limit = { var:rf_adventurer_final_chance > 100 } set_variable = { name = rf_adventurer_final_chance value = 100 } }

                random = {
                    chance = var:rf_adventurer_final_chance
                    modifier = 0
                    riseandfall_do_create_adventurer_se = yes
                }
                remove_variable = rf_adventurer_trait_chance
                remove_variable = rf_adventurer_final_chance
            }
        }
    }
}


riseandfall_marry_male_target_se = {
    # Expecting character scope (root) — the adventurer leader. Only operate on that character.
    create_character = {
        location = scope:independent_ruler.capital_province
        culture = scope:independent_ruler.culture
        faith = scope:independent_ruler.faith
        age = { 16 20 }
        gender = female
        save_scope_as = created_spouse
    }
    marry = scope:created_spouse
}


riseandfall_marry_female_target_se = {
    # Expecting character scope (root) — the adventurer leader. Only operate on that character.
    create_character = {
        location = scope:independent_ruler.capital_province
        culture = scope:independent_ruler.culture
        faith = scope:independent_ruler.faith
        age = { 16 20 }
        gender = male
        save_scope_as = created_spouse
    }
    marry_matrilineal = scope:created_spouse
}


### Dedicated creation effect (guarded to avoid double-creation if multiple chances hit)
riseandfall_do_create_adventurer_se = {
    # Ensure we haven't already made this character into an adventurer (guard against multiple triggers)
    if = {
        limit = { NOT = { has_character_flag = riseandfall_newadventurer } }

        save_scope_as = adventurer_child

        create_adventurer_title = {
            name = riseandfall_adventurer_title_name
            holder = scope:adventurer_child
            save_scope_as = created_adventurer_title
        }

        scope:adventurer_child = {
            add_realm_law = camp_purpose_legitimists
            set_variable = { name = adventurer_base_year_income value = scope:independent_ruler.monthly_character_income }
            change_variable = { name = adventurer_base_year_income multiply = 60 }

            set_variable = { name = adventurer_start_gold_mult value = scope:adventurer_child.stewardship }
            change_variable = { name = adventurer_start_gold_mult multiply = 0.1 }

            set_variable = { name = adventurer_starting_gold value = var:adventurer_base_year_income }
            change_variable = { name = adventurer_starting_gold multiply = var:adventurer_start_gold_mult }
            round_variable = { name = adventurer_starting_gold nearest = 1 }

            if = {
                limit = { var:adventurer_starting_gold >= 0 }
                add_gold = var:adventurer_starting_gold
            }
            add_character_modifier = { modifier = riseandfall_adventurer_gold_mod }
            add_character_flag = riseandfall_newadventurer
            add_character_flag = { flag = riseandfall_newadventurer_war_block years = 10 }

            remove_variable = adventurer_starting_gold
            remove_variable = adventurer_base_year_income
            remove_variable = adventurer_start_gold_mult
        }

        scope:adventurer_child = {
            set_variable = { name = adventurer_base_levies value = scope:independent_ruler.military_power }
            change_variable = { name = adventurer_base_levies multiply = 0.10 }

            set_variable = { name = adventurer_multiplier value = scope:adventurer_child.martial }
            change_variable = { name = adventurer_multiplier multiply = 0.1 }

            random_list = {
                15 = { change_variable = { name = adventurer_multiplier multiply = 0.75 } }
                70 = { }
                10 = { change_variable = { name = adventurer_multiplier multiply = 1.25 } }
                5 = { change_variable = { name = adventurer_multiplier multiply = 1.75 } }
            }

            set_variable = { name = adventurer_army_size value = var:adventurer_base_levies }
            change_variable = { name = adventurer_army_size multiply = var:adventurer_multiplier }
            round_variable = { name = adventurer_army_size nearest = 1 }

            set_variable = { name = adventurer_max_cap value = var:adventurer_base_levies }
            change_variable = { name = adventurer_max_cap multiply = 6 }

            remove_variable = adventurer_base_levies
            remove_variable = adventurer_max_cap

            spawn_army = {
                name = riseandfall_adventurer_host_name
                levies = var:adventurer_army_size
                war_keep_on_attacker_victory = no
                inheritable = no
                location = scope:independent_ruler.capital_province
            }
            remove_variable = adventurer_army_size
            remove_variable = adventurer_multiplier

            set_variable = { name = rf_while_counter value = 0 }
            set_variable = { name = rf_while_loop_target value = scope:adventurer_child.diplomacy }
            if = { limit = { var:rf_while_loop_target > 20 } set_variable = { name = rf_while_loop_target value = 20 } }
            riseandfall_run_create_knights_while_se = yes
            remove_variable = rf_while_counter
            remove_variable = rf_while_loop_target
        }
    }
}


riseandfall_adventurer_press_claims_se = {
    # Expecting character scope (the adventurer leader)
    # Try to press an empire claim first, falling back to kingdom claims.
    # If the adventurer's military power is greater than the current title holder's,
    # declare war automatically. Otherwise only attempt with a 5% chance.

    # Empire-tier preference
    if = {
        limit = { any_claim = { tier >= tier_empire } }
        random_claim = {
            limit = { tier >= tier_empire }
            save_scope_as = claim_target_title
            scope:independent_adventurer = {
                if = {
                    limit = { exists = scope:claim_target_title.holder }
                    # Auto-declare if adventurer stronger and no truce exists
                    if = {
                        limit = { scope:independent_adventurer.military_power > scope:claim_target_title.holder.military_power }
                        if = {
                            limit = { NOT = { has_truce = scope:claim_target_title.holder } }
                                if = { limit = { NOT = { has_character_flag = riseandfall_newadventurer_war_block } } start_war = { casus_belli = claim_cb target = scope:claim_target_title.holder claimant = scope:independent_adventurer target_title = scope:claim_target_title } }
                        }
                    }
                    else = {
                        # Not stronger: keep the original small-chance behavior but respect truces
                        random_list = {
                            5 = {
                                if = {
                                    limit = { NOT = { has_truce = scope:claim_target_title.holder } }
                                    start_war = { casus_belli = claim_cb target = scope:claim_target_title.holder claimant = scope:independent_adventurer target_title = scope:claim_target_title }
                                }
                            }
                            95 = { }
                        }
                    }
                }
            }
                                        if = { limit = { NOT = { has_character_flag = riseandfall_newadventurer_war_block } } start_war = { casus_belli = claim_cb target = scope:claim_target_title.holder claimant = scope:independent_adventurer target_title = scope:claim_target_title } }
    }
    else = {
        # No empire claims: try kingdom-tier claims with the same strength check
        if = {
            limit = { any_claim = { tier >= tier_kingdom } }
            random_claim = {
                limit = { tier >= tier_kingdom }
                                            if = { limit = { NOT = { has_character_flag = riseandfall_newadventurer_war_block } } start_war = { casus_belli = claim_cb target = scope:claim_target_title.holder claimant = scope:independent_adventurer target_title = scope:claim_target_title } }
                scope:independent_adventurer = {
                    if = {
                        limit = { exists = scope:claim_target_title.holder }
                        if = {
                            limit = { scope:independent_adventurer.military_power > scope:claim_target_title.holder.military_power }
                            if = {
                                limit = { NOT = { has_truce = scope:claim_target_title.holder } }
                                start_war = { casus_belli = claim_cb target = scope:claim_target_title.holder claimant = scope:independent_adventurer target_title = scope:claim_target_title }
                            }
                        }
                        else = {
                            random_list = {
                                5 = {
                                    if = {
                                        limit = { NOT = { has_truce = scope:claim_target_title.holder } }
                                        start_war = { casus_belli = claim_cb target = scope:claim_target_title.holder claimant = scope:independent_adventurer target_title = scope:claim_target_title }
                                    }
                                }
                                95 = { }
                            }
                        }
                    }
                }
            }
        }
    }
}
}


riseandfall_remove_adventurer_gold_mod_if_not_landless_se = {
    # Expecting character scope (the ruler). Remove the adventurer gold modifier when no longer landless.
    remove_character_modifier = riseandfall_adventurer_gold_mod
}


# Create a single knight companion for the adventurer and add them to the adventurer's travel plan.
# Expects to be called from a context where `adventurer_child` saved scope exists (save_scope_as = adventurer_child)
riseandfall_create_adventurer_knight_se = {
    # Create a single knight near the independent ruler's capital and save scope for adding as companion
    create_character = {
        employer = scope:adventurer_child
        culture = scope:adventurer_child.culture
        faith = scope:adventurer_child.faith
        age = { 18 35 }
        gender = male
        # Give a small chance for knightly traits via random_traits_list if desired; keep simple for now
        save_scope_as = created_knight
    }

    # Cleanup saved scope
    clear_saved_scope = created_knight
}

# Recursive runner: create knights until rf_while_counter >= rf_while_loop_target
riseandfall_run_create_knights_while_se = {
    if = {
        limit = { var:rf_while_counter < var:rf_while_loop_target }
        # Create one knight
        riseandfall_create_adventurer_knight_se = yes
        # increment counter
        change_variable = { name = rf_while_counter add = 1 }
        # recurse
        riseandfall_run_create_knights_while_se = yes
    }
}


