riseandfall_check_dynasty_for_adventurers_se = {
    # Expecting character scope (independent ruler). Check their dynasty members.
    if = {
        limit = { has_dynasty = yes }
        dynasty = {
            every_dynasty_member = {
                limit = {
                    is_landed = no
                    is_imprisoned = no
                    NOT = { has_government = landless_adventurer_government }
                    # Exclude anyone who is an heir of the independent ruler (primary/designated/player)
                    NOT = { is_heir_of = scope:independent_ruler }
                    # Exclude religious/scholarly characters who should not become adventurers
                    NOT = {
                        OR = {
                            has_trait = devoted
                            has_trait = incapable
                            has_trait = maester
                            has_trait = septon
                            has_trait = high_septon
                            has_trait = eunuch
                            has_trait = beardless_eunuch
                            has_trait = nightswatch
                        }
                    }
                    age >= 16
                    any_claim = { tier >= tier_kingdom }
                }
                riseandfall_turn_into_adventurer_se = yes
            }
        }
    }
}


riseandfall_marry_male_target_se = {
    # Expecting character scope (root) — the adventurer leader. Only operate on that character.
    create_character = {
        location = scope:independent_ruler.capital_province
        culture = scope:independent_ruler.culture
        faith = scope:independent_ruler.faith
        age = { 16 20 }
        gender = female
        save_scope_as = created_spouse
    }
    marry = scope:created_spouse
}


riseandfall_marry_female_target_se = {
    # Expecting character scope (root) — the adventurer leader. Only operate on that character.
    create_character = {
        location = scope:independent_ruler.capital_province
        culture = scope:independent_ruler.culture
        faith = scope:independent_ruler.faith
        age = { 16 20 }
        gender = male
        save_scope_as = created_spouse
    }
    marry_matrilineal = scope:created_spouse
}


riseandfall_turn_into_adventurer_se = {
    random_list = {
        2 = {  # chance weight 99
            save_scope_as = adventurer_child
            # marriage for landless adventurers is handled by yearly on_actions (riseandfall_marry_*),
            # moved out of the immediate creation effect so eligibility checks run centrally.

            create_adventurer_title = {
                name = riseandfall_adventurer_title_name
                holder = scope:adventurer_child
                save_scope_as = created_adventurer_title
            }

            # Set camp law on the created adventurer's camp
            scope:adventurer_child = {
                add_realm_law = camp_purpose_legitimists
                # Give starting gold equal to one year's worth of the independent ruler's income
                # plus 20% of the independent ruler's current gold
                set_variable = { name = adventurer_starting_gold value = scope:independent_ruler.monthly_character_income }
                change_variable = { name = adventurer_starting_gold multiply = 12 }

                # Compute 20% of the ruler's current gold and add it to the starting amount
                set_variable = { name = adventurer_gold_percent value = scope:independent_ruler.gold }
                change_variable = { name = adventurer_gold_percent multiply = 0.2 }
                change_variable = { name = adventurer_starting_gold add = var:adventurer_gold_percent }

                # Final rounding and cleanup
                round_variable = { name = adventurer_starting_gold nearest = 1 }

                # Give starting gold (same regardless of claim tier) and apply baseline modifier
                add_gold = var:adventurer_starting_gold
                add_character_modifier = { modifier = riseandfall_adventurer_gold_mod }
                # mark this character as a freshly created adventurer for other systems to detect
                add_character_flag = riseandfall_newadventurer

                # Make the adventurer become a formal rival of the independent ruler to encourage aggression
                # (rival creation removed — not needed anymore)

                remove_variable = adventurer_starting_gold
            }

            scope:adventurer_child = {
                # Derive an estimated levies number from the ruler's military_power
                # (approx conversion: military_power / 20 => levies). This keeps army sizes
                # proportional to real levies instead of raw military_power units.
                # Increase base conversion so adventurer hosts are significantly tougher.
                # New conversion: military_power * 0.10 => estimated levies (stronger scaling).
                set_variable = { name = adventurer_base_levies value = scope:independent_ruler.military_power }
                change_variable = { name = adventurer_base_levies multiply = 0.10 }

                # Weighted random distribution so adventurer hosts can be small, medium,
                # large, or occasionally massive relative to the ruler's levies.
                set_variable = { name = adventurer_multiplier value = 1 }
                # Stronger distribution: more mid/large outcomes and meaningful chance
                # of massive/huge hosts. Weights sum to 100.
                random_list = {
                    10 = { set_variable = { name = adventurer_multiplier value = 0.25 } }  # small-medium (~25%)
                    10 = { set_variable = { name = adventurer_multiplier value = 0.50 } }  # medium (~50%)
                    35 = { set_variable = { name = adventurer_multiplier value = 1.00 } }  # parity (~100%)
                    30 = { set_variable = { name = adventurer_multiplier value = 1.75 } }  # above-parity (~175%)
                    10 = { set_variable = { name = adventurer_multiplier value = 3.00 } }  # massive (rare)
                     5 = { set_variable = { name = adventurer_multiplier value = 6.00 } }  # huge (very rare)
                }

                # Apply multiplier to the estimated levies and round to whole levies
                set_variable = { name = adventurer_army_size value = var:adventurer_base_levies }
                change_variable = { name = adventurer_army_size multiply = var:adventurer_multiplier }
                round_variable = { name = adventurer_army_size nearest = 1 }

                # Safety clamp: allow much larger spawns but cap at 6x the estimated levies
                # to prevent absurd extremes. Also raise minimum to 100 levies.
                # Compute cap from the already-calculated base levies variable to avoid
                # relying on scope:independent_ruler being present in every call.
                set_variable = { name = adventurer_max_cap value = var:adventurer_base_levies }
                change_variable = { name = adventurer_max_cap multiply = 6 }

                # Cleanup helper vars
                remove_variable = adventurer_base_levies
                remove_variable = adventurer_max_cap

                spawn_army = {
                    name = riseandfall_adventurer_host_name
                    levies = var:adventurer_army_size
                    inheritable = no
                    location = scope:independent_ruler.capital_province
                }
                remove_variable = adventurer_army_size
                remove_variable = adventurer_multiplier
            }
        }
        98 = {
            # Nothing happens in this branch
        }
    }
}


riseandfall_adventurer_press_claims_se = {
    # Expecting character scope (the adventurer leader)
    # Try to press an empire claim first, falling back to kingdom claims.
    # If the adventurer's military power is greater than the current title holder's,
    # declare war automatically. Otherwise only attempt with a 5% chance.

    # Empire-tier preference
    if = {
        limit = { any_claim = { tier >= tier_empire } }
        random_claim = {
            limit = { tier >= tier_empire }
            save_scope_as = claim_target_title
            scope:independent_adventurer = {
                if = {
                    limit = { exists = scope:claim_target_title.holder }
                    # Auto-declare if adventurer stronger
                    if = {
                        limit = { scope:independent_adventurer.military_power > scope:claim_target_title.holder.military_power }
                        start_war = { casus_belli = claim_cb target = scope:claim_target_title.holder claimant = scope:independent_adventurer target_title = scope:claim_target_title }
                    }
                    else = {
                        # Not stronger: keep the original small-chance behavior
                        random_list = {
                            5 = { start_war = { casus_belli = claim_cb target = scope:claim_target_title.holder claimant = scope:independent_adventurer target_title = scope:claim_target_title } }
                            95 = { }
                        }
                    }
                }
            }
        }
    }
    else = {
        # No empire claims: try kingdom-tier claims with the same strength check
        if = {
            limit = { any_claim = { tier >= tier_kingdom } }
            random_claim = {
                limit = { tier >= tier_kingdom }
                save_scope_as = claim_target_title
                scope:independent_adventurer = {
                    if = {
                        limit = { exists = scope:claim_target_title.holder }
                        if = {
                            limit = { scope:independent_adventurer.military_power > scope:claim_target_title.holder.military_power }
                            start_war = { casus_belli = claim_cb target = scope:claim_target_title.holder claimant = scope:independent_adventurer target_title = scope:claim_target_title }
                        }
                        else = {
                            random_list = {
                                5 = { start_war = { casus_belli = claim_cb target = scope:claim_target_title.holder claimant = scope:independent_adventurer target_title = scope:claim_target_title } }
                                95 = { }
                            }
                        }
                    }
                }
            }
        }
    }
}


riseandfall_remove_adventurer_gold_mod_if_not_landless_se = {
    # Expecting character scope (the ruler). Remove the adventurer gold modifier when no longer landless.
    remove_character_modifier = riseandfall_adventurer_gold_mod
}

