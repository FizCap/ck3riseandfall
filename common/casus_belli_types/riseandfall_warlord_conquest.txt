warlord_conquest_cb = {
    icon = county_conquest_cb
    group = conquest

    combine_into_one = yes
    should_show_war_goal_subview = yes
    mutually_exclusive_titles = { always = yes }
    
    

    # Allow vassals with warlord trait to use this CB against other vassals
    allowed_for_character = {
        has_trait = warlord
        is_independent_ruler = no  # Must be a vassal
        NOR = {
            government_has_flag = government_is_landless_adventurer
            government_has_flag = government_is_nomadic
        }
    }

    allowed_against_character = {
    # Warlords can attack fellow vassals under the same liege
    is_vassal_or_below_of = scope:attacker.liege
    NOT = { this = scope:attacker }
    }
    target_titles = neighbor_land
    target_title_tier = all  # Allow targeting any tier titles, including non-existent ones
    target_de_jure_regions_above = yes
    ignore_effect = change_title_holder

    

    valid_to_start = {
        scope:target = {
            any_in_de_jure_hierarchy = {
                tier = tier_county
                neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
            }
        }
        scope:target = {
            trigger_if = {
                limit = {
                    scope:attacker = { is_ai = yes }
                }
                any_in_de_jure_hierarchy = {
                    continue = { tier > tier_county }
                    count >= 2
                    tier = tier_county
                    holder ?= {
                        OR = {
                            this = scope:defender
                            is_vassal_or_below_of = scope:defender
                        }
                    }
                }
            }
        }
    }

    allowed_for_character_display_regardless = {
        # Struggle constraint
        custom_tooltip = {
            text = struggle_involvement_cb_check_failure
            struggle_blocks_invasion_conquest_cb_trigger = yes
        }
    }

    should_invalidate = {
        NOT = {
            any_in_list = {
                list = target_titles
                any_in_de_jure_hierarchy = {
                    tier = tier_county
                    holder = {
                        OR = {
                            this = scope:defender
                            target_is_liege_or_above = scope:defender
                        }
                    }
                }
            }
        }
    }

    on_invalidated_desc = msg_county_conquest_war_invalidated_message

    on_invalidated = {
    }

    cost = {
        piety = {
            value = 0
            add = common_cb_impious_piety_cost
        }
        prestige = {
            value = 0
            if = {
                limit = {
                    scope:attacker.primary_title.tier <= tier_county
                }
                add = {
                    value = 50
                    desc = CB_BASE_COST
                }
            }
            else = {
                add = {
                    value = 100
                    desc = CB_BASE_COST
                }
            }

            multiply = common_cb_prestige_cost_multiplier
        }
    }

    on_declaration = {
        on_declared_war = yes
    }

    on_victory_desc = {
        first_valid = {
            triggered_desc = {
                trigger = { scope:attacker = { is_local_player = yes } }
                desc = ducal_conquest_cb_victory_desc_attacker
            }
            desc = ducal_conquest_cb_victory_desc
        }
    }

    on_victory = {
        scope:attacker = { show_pow_release_message_effect = yes }
        
        # Legitimacy
        add_legitimacy_attacker_victory_effect = yes

        #EP2 accolade glory gain for winning against higher ranked enemy
        scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }

        # Brute force logic: always transfer the defender's top-tier titles to the attacker,
        # then vassalize the defender (defender keeps lower titles, drops rank).
        # This handles all tier combinations robustly.
        create_title_and_vassal_change = {
            type = conquest
            save_scope_as = change
            add_claim_on_loss = yes
        }

        # Transfer all titles held by the defender at the same tier as their primary title
        # (e.g., all kingdom titles if defender is king)
        scope:defender = {
            every_held_title = {
                limit = { tier = scope:defender.primary_title.tier holder = scope:defender }
                change_title_holder = {
                    holder = scope:attacker
                    change = scope:change
                    take_baronies = yes
                }
            }
            change_liege = {
                liege = scope:attacker
                change = scope:change
            }
            # Transfer all direct vassals of the defender to the attacker
            every_vassal = {
                change_liege = {
                    liege = scope:attacker
                    change = scope:change
                }
            }
        }

        # Follow vanilla conquest transfer logic for predictable behavior, but only for top-tier titles
        every_in_list = {
            list = target_titles
            limit = { tier = scope:defender.primary_title.tier }
            custom_tooltip = CONQUEST_CB_TITLE

            conquest_cb_title_transfer = {
                RELIGIOUS_WAR = no
            }
        }

        # Only change holders for titles that were actually taken by the war.
        every_in_list = {
            list = titles_taken
            # Transfer target titles that are at or above the attacker's primary title tier
            # (allows a duke to receive kingdom titles if they were part of the war).
            if = {
                limit = { tier >= scope:attacker.primary_title.tier holder = scope:defender }
                change_title_holder = {
                    holder = scope:attacker
                    change = scope:change
                    take_baronies = yes
                }
            }
        }

        every_in_list = {
            list = vassals_taken
            change_liege = {
                liege = scope:attacker
                change = scope:change
            }
        }

        resolve_title_and_vassal_change = scope:change

        # EP3 Laamp possibility warning
        scope:defender = { ep3_war_loss_adventurer_tt_effect = yes }

        # Prestige Progress for the Attacker (higher tier attacker gets more prestige)
        if = {
            limit = { scope:attacker.primary_title.tier > scope:defender.primary_title.tier }
            scope:attacker = {
                add_prestige_experience = {
                    value = medium_prestige_value
                }
            }
        }
        else = {
            every_in_list = {
                list = target_titles
                scope:attacker = {
                    add_prestige_experience = minor_prestige_value
                }
            }
        }

        # Allies on both sides get full prestige value for helping in the war, based on their war participation.
        modify_allies_of_participants_fame_values = {
            WINNER = scope:attacker
            FAME_BASE = minor_prestige_value
            IS_RELIGIOUS_WAR = no
            WINNER_ALLY_FAME_SCALE = 1
            LOSER_ALLY_FAME_SCALE = 1
        }

        # Truce
        add_truce_attacker_victory_effect = yes

        # FP1: note the victory for future memorialisation via stele (if applicable).
        scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

        # EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
        laamp_as_mercenary_payout_tooltip_effect = yes
    }

    on_white_peace_desc = {
        first_valid = {
            triggered_desc = {
                trigger = { scope:defender = { is_local_player = yes } }
                desc = ducal_conquest_cb_white_peace_desc_defender
            }
            desc = ducal_conquest_cb_white_peace_desc
        }
    }

    on_white_peace = {
        scope:attacker = { show_pow_release_message_effect = yes }
        # Prestige loss for the attacker

        #EP2 accolade glory gain for doing pretty good against higher ranked enemy
        scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

        scope:attacker = {
            add_prestige = {
                value = minor_prestige_value
                multiply = -1.0
            }
        }

        # Allies on both sides get full prestige value for helping in the war, based on their war participation.
        modify_allies_of_participants_fame_values = {
            WINNER = scope:attacker # not important as the scale are identical
            FAME_BASE = medium_prestige_value
            IS_RELIGIOUS_WAR = no
            WINNER_ALLY_FAME_SCALE = 1
            LOSER_ALLY_FAME_SCALE = 1
        }

        add_truce_white_peace_effect = yes

        # EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
        laamp_as_mercenary_payout_tooltip_effect = yes
    }

    on_defeat_desc = {
        first_valid = {
            triggered_desc = {
                trigger = { scope:defender = { is_local_player = yes } }
                desc = ducal_conquest_cb_defeat_desc_defender
            }
            triggered_desc = {
                trigger = {
                    scope:attacker = {
                        is_local_player = yes
                        has_targeting_faction = yes
                    }
                }
                desc = ducal_conquest_cb_defeat_desc_attacker
            }
            desc = ducal_conquest_cb_defeat_desc
        }
    }

    on_defeat = {
        scope:attacker = { show_pow_release_message_effect = yes }
        
        # Legitimacy
        add_legitimacy_attacker_defeat_effect = yes

        #EP2 accolade glory gain for winning against higher ranked enemy
        scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

        # Prestige loss for the attacker
        scope:attacker = {
            pay_short_term_gold_reparations_effect = {
                GOLD_VALUE = 2
            }
            add_prestige = {
                value = medium_prestige_value
                multiply = -1.0
            }
        }

        # Prestige for Defender
        scope:defender = {
            add_prestige_war_defender_effect = {
                PRESTIGE_VALUE = medium_prestige_value
            }
        }

        # Allies on both sides get full prestige value for helping in the war, based on their war participation.
        modify_allies_of_participants_fame_values = {
            WINNER = scope:defender
            FAME_BASE = minor_prestige_value
            IS_RELIGIOUS_WAR = no
            WINNER_ALLY_FAME_SCALE = 1
            LOSER_ALLY_FAME_SCALE = 1
        }

        add_truce_attacker_defeat_effect = yes

        scope:attacker = {
            save_temporary_scope_as = loser
        }
        on_lost_aggression_war_discontent_loss = yes

        # EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
        laamp_as_mercenary_payout_tooltip_effect = yes
    }

    transfer_behavior = transfer

    on_primary_attacker_death = inherit
    on_primary_defender_death = inherit

    attacker_allies_inherit = yes
    defender_allies_inherit = yes

    war_name = "WARLORD_CONQUEST_WAR_NAME"
    war_name_base = "WARLORD_CONQUEST_WAR_NAME_BASE"
    cb_name = "WARLORD_CONQUEST_CB_NAME"

    interface_priority = 79

    attacker_wargoal_percentage = 0.8

    # War score tuning — prioritize battles (cap battles contribution at 90)
    attacker_ticking_warscore_delay = { months = 12 }    # Delay before ticking warscore increases for attacker
    defender_ticking_warscore_delay = { months = 12 }    # Delay before ticking warscore increases for defender
    attacker_ticking_warscore = 0.1                       # Ticking warscore per day for attacker
    defender_ticking_warscore = 0.1                       # Ticking warscore per day for defender

    # Scales — favor battles over occupation
    attacker_score_from_occupation_scale = 25
    defender_score_from_occupation_scale = 25
    attacker_score_from_battles_scale = 100
    defender_score_from_battles_scale = 100

    # Hard caps — battles can contribute up to 90 warscore, occupation much less
    max_attacker_score_from_battles = 90
    max_defender_score_from_battles = 90
    max_attacker_score_from_occupation = 100
    max_defender_score_from_occupation = 100

    # Keep the vanilla/intent behavior flags
    full_occupation_by_defender_gives_victory = no
    full_occupation_by_attacker_gives_victory = no
    landless_attacker_needs_armies = no
    allow_hostages = yes

    max_ai_diplo_distance_to_title = 1500

    ai_score_mult = {
        value = 1
        #Declaring war on the frankokratia leader can really ruin the whole thing
        if = {
            limit = {
                scope:defender = {
                    any_owned_story = {
                        story_type = frankokratia_story
                        NOT = { has_variable = franko_war_complete }
                    }
                }
            }
            multiply = 0
        }
    }
}
