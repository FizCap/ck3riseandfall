warlord_conquest_cb = {
    icon = county_conquest_cb
    group = conquest

    combine_into_one = yes
    should_show_war_goal_subview = yes
    mutually_exclusive_titles = { always = yes }
    
    ai_can_target_all_titles = {
        has_trait = warlord
    }

    # Allow vassals with warlord trait to use this CB against other vassals
    allowed_for_character = {
        has_trait = warlord
        is_independent_ruler = no  # Must be a vassal
        NOR = {
            government_has_flag = government_is_landless_adventurer
            government_has_flag = government_is_nomadic
        }
    }

    allowed_against_character = {
        # Allow targeting any character for now - validation happens in valid_to_start
        always = yes
    }
    target_titles = neighbor_land
    target_title_tier = all  # Allow targeting any tier titles, including non-existent ones
    target_de_jure_regions_above = yes
    ignore_effect = change_title_holder

    ai_can_target_all_titles = {
        has_trait = warlord
    }

    valid_to_start = {
        # Allow targeting any valid title, whether it exists or not
        scope:target = {
            OR = {
                # Existing titles with valid holders
                AND = {
                    exists = holder
                    holder = {
                        is_vassal_or_below_of = scope:attacker.liege
                        NOT = { this = scope:attacker }
                    }
                }
                # Non-existent titles that could be created
                AND = {
                    NOT = { exists = holder }
                    # Must be adjacent to attacker's territory or in their realm
                    OR = {
                        title_province = {
                            any_neighbor_province = {
                                county = {
                                    holder = {
                                        OR = {
                                            this = scope:attacker
                                            is_vassal_or_below_of = scope:attacker
                                        }
                                    }
                                }
                            }
                        }
                        any_in_de_jure_hierarchy = {
                            holder = {
                                OR = {
                                    this = scope:attacker
                                    is_vassal_or_below_of = scope:attacker
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    allowed_for_character_display_regardless = {
        # Struggle constraint
        custom_tooltip = {
            text = struggle_involvement_cb_check_failure
            struggle_blocks_invasion_conquest_cb_trigger = yes
        }
    }

    should_invalidate = {
        NOT = {
            any_in_list = {
                list = target_titles
                OR = {
                    # For existing titles
                    any_in_de_jure_hierarchy = {
                        tier = tier_county
                        holder = {
                            OR = {
                                this = scope:defender
                                target_is_liege_or_above = scope:defender
                            }
                        }
                    }
                    # For non-existent titles, check if they would be controlled by defender
                    AND = {
                        NOT = { exists = holder }
                        any_in_de_jure_hierarchy = {
                            tier = tier_county
                            de_jure_liege = {
                                OR = {
                                    this = scope:defender
                                    target_is_liege_or_above = scope:defender
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    on_invalidated_desc = msg_county_conquest_war_invalidated_message

    on_invalidated = {
    }

    cost = {
        piety = {
            value = 0
            add = common_cb_impious_piety_cost
        }
        prestige = {
            value = 0
            if = {
                limit = {
                    scope:attacker.primary_title.tier <= tier_county
                }
                add = {
                    value = 50
                    desc = CB_BASE_COST
                }
            }
            else = {
                add = {
                    value = 100
                    desc = CB_BASE_COST
                }
            }

            multiply = common_cb_prestige_cost_multiplier
        }
    }

    on_declaration = {
        on_declared_war = yes
    }

    on_victory_desc = {
        first_valid = {
            triggered_desc = {
                trigger = { scope:attacker = { is_local_player = yes } }
                desc = ducal_conquest_cb_victory_desc_attacker
            }
            desc = ducal_conquest_cb_victory_desc
        }
    }

    on_victory = {
        scope:attacker = { show_pow_release_message_effect = yes }
        
        # Legitimacy
        add_legitimacy_attacker_victory_effect = yes

        #EP2 accolade glory gain for winning against higher ranked enemy
        scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }

        create_title_and_vassal_change = {
            type = conquest
            save_scope_as = change
            add_claim_on_loss = yes
        }

        # EP3 Laamp possibility warning
        scope:defender = { ep3_war_loss_adventurer_tt_effect = yes }

        # Handle both existing and non-existent titles
        every_in_list = {
            list = target_titles
            custom_tooltip = CONQUEST_CB_TITLE
            every_in_de_jure_hierarchy = {
                continue = {
                    OR = {
                        NOT = {
                            exists = holder
                        }
                        NOT = {
                            holder = {
                                target_is_liege_or_above = scope:defender
                            }
                        }
                        AND = {
                            scope:attacker.faith = {
                                faith_hostility_level_comparison = {
                                    prev.holder.faith <= scope:defender.faith
                                }
                            }
                            holder = {
                                OR = {
                                    this = scope:defender
                                    target_is_liege_or_above = scope:defender
                                }
                            }
                        }
                    }
                    tier > tier_county
                }
                limit = {
                    tier = tier_county
                    OR = {
                        # Existing counties with holders
                        AND = {
                            exists = holder
                            holder = {
                                OR = {
                                    this = scope:defender
                                    target_is_liege_or_above = scope:defender
                                }
                            }
                        }
                        # Non-existent counties (create them)
                        AND = {
                            NOT = { exists = holder }
                            any_in_de_jure_hierarchy = {
                                tier = tier_county
                                de_jure_liege = {
                                    OR = {
                                        this = scope:defender
                                        target_is_liege_or_above = scope:defender
                                    }
                                }
                            }
                        }
                    }
                }

                if = {
                    limit = {
                        OR = {
                            scope:attacker.faith = {
                                faith_hostility_level_comparison = {
                                    prev.holder.faith >= scope:defender.faith
                                }
                            }
                            holder.primary_title.tier >= scope:attacker.primary_title.tier
                        }
                    }
                    add_to_temporary_list = titles_taken
                }
                else = {
                    holder = {
                        add_to_temporary_list = vassals_taken
                    }
                }
            }
        }

        every_in_list = {
            list = titles_taken
            change_title_holder = {
                holder = scope:attacker
                change = scope:change
                take_baronies = yes
            }
        }

        every_in_list = {
            list = vassals_taken
            change_liege = {
                liege = scope:attacker
                change = scope:change
            }
        }

        resolve_title_and_vassal_change = scope:change

        # Prestige Progress for the Attacker
        every_in_list = {
            list = target_titles
            scope:attacker = {
                add_prestige_experience = minor_prestige_value
            }
        }

        # Allies on both sides get full prestige value for helping in the war, based on their war participation.
        modify_allies_of_participants_fame_values = {
            WINNER = scope:attacker
            FAME_BASE = minor_prestige_value
            IS_RELIGIOUS_WAR = no
            WINNER_ALLY_FAME_SCALE = 1
            LOSER_ALLY_FAME_SCALE = 1
        }

        # Truce
        add_truce_attacker_victory_effect = yes

        # FP1: note the victory for future memorialisation via stele (if applicable).
        scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

        # EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
        laamp_as_mercenary_payout_tooltip_effect = yes
    }

    on_white_peace_desc = {
        first_valid = {
            triggered_desc = {
                trigger = { scope:defender = { is_local_player = yes } }
                desc = ducal_conquest_cb_white_peace_desc_defender
            }
            desc = ducal_conquest_cb_white_peace_desc
        }
    }

    on_white_peace = {
        scope:attacker = { show_pow_release_message_effect = yes }
        # Prestige loss for the attacker

        #EP2 accolade glory gain for doing pretty good against higher ranked enemy
        scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

        scope:attacker = {
            add_prestige = {
                value = minor_prestige_value
                multiply = -1.0
            }
        }

        # Allies on both sides get full prestige value for helping in the war, based on their war participation.
        modify_allies_of_participants_fame_values = {
            WINNER = scope:attacker # not important as the scale are identical
            FAME_BASE = medium_prestige_value
            IS_RELIGIOUS_WAR = no
            WINNER_ALLY_FAME_SCALE = 1
            LOSER_ALLY_FAME_SCALE = 1
        }

        add_truce_white_peace_effect = yes

        # EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
        laamp_as_mercenary_payout_tooltip_effect = yes
    }

    on_defeat_desc = {
        first_valid = {
            triggered_desc = {
                trigger = { scope:defender = { is_local_player = yes } }
                desc = ducal_conquest_cb_defeat_desc_defender
            }
            triggered_desc = {
                trigger = {
                    scope:attacker = {
                        is_local_player = yes
                        has_targeting_faction = yes
                    }
                }
                desc = ducal_conquest_cb_defeat_desc_attacker
            }
            desc = ducal_conquest_cb_defeat_desc
        }
    }

    on_defeat = {
        scope:attacker = { show_pow_release_message_effect = yes }
        
        # Legitimacy
        add_legitimacy_attacker_defeat_effect = yes

        #EP2 accolade glory gain for winning against higher ranked enemy
        scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

        # Prestige loss for the attacker
        scope:attacker = {
            pay_short_term_gold_reparations_effect = {
                GOLD_VALUE = 2
            }
            add_prestige = {
                value = medium_prestige_value
                multiply = -1.0
            }
        }

        # Prestige for Defender
        scope:defender = {
            add_prestige_war_defender_effect = {
                PRESTIGE_VALUE = medium_prestige_value
            }
        }

        # Allies on both sides get full prestige value for helping in the war, based on their war participation.
        modify_allies_of_participants_fame_values = {
            WINNER = scope:defender
            FAME_BASE = minor_prestige_value
            IS_RELIGIOUS_WAR = no
            WINNER_ALLY_FAME_SCALE = 1
            LOSER_ALLY_FAME_SCALE = 1
        }

        add_truce_attacker_defeat_effect = yes

        scope:attacker = {
            save_temporary_scope_as = loser
        }
        on_lost_aggression_war_discontent_loss = yes

        # EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
        laamp_as_mercenary_payout_tooltip_effect = yes
    }

    transfer_behavior = transfer

    on_primary_attacker_death = inherit
    on_primary_defender_death = inherit

    attacker_allies_inherit = yes
    defender_allies_inherit = yes

    war_name = "WARLORD_CONQUEST_WAR_NAME"
    war_name_base = "WARLORD_CONQUEST_WAR_NAME_BASE"
    cb_name = "WARLORD_CONQUEST_CB_NAME"

    interface_priority = 79

    attacker_wargoal_percentage = 0.8
    
    max_defender_score_from_occupation = 150
    max_attacker_score_from_occupation = 150

    max_ai_diplo_distance_to_title = 1500

    ai_score_mult = {
        value = 1
        #Declaring war on the frankokratia leader can really ruin the whole thing
        if = {
            limit = {
                scope:defender = {
                    any_owned_story = {
                        story_type = frankokratia_story
                        NOT = { has_variable = franko_war_complete }
                    }
                }
            }
            multiply = 0
        }
    }
}
