namespace = warlord

# Liege-facing notification: informs the ruler that warlords are rising among vassals
warlord.1001 = {
    type = character_event
    title = warlord.1001.t
    desc = warlord.1001.d
    theme = realm

    left_portrait = root

    option = {
        name = warlord.1001.a
        ai_chance = { base = 100 }
        # Grant the liege a realm law and run the hidden_effect so the iteration runs in effect scope
        if = {
            limit = { NOT = { has_realm_law = crown_authority_0 } }
            add_realm_law = crown_authority_0
        }
        hidden_effect = {
            every_vassal = {
                limit = {
                    NOT = { has_trait = warlord }
                    NOT = { has_trait = loyal }
                }
                trigger_event = { id = warlord.1002 }
            }
            # Set low stability cooldown on the liege when this event fires
            set_variable = { name = low_stability_cooldown value = yes days = 1825 }
        }
    }
}

# Vassal-facing decision: vassals may choose to become a warlord or remain loyal
warlord.1002 = {
    type = character_event
    title = warlord.1002.t
    desc = warlord.1002.d
    theme = realm

    left_portrait = liege
    right_portrait = root

    immediate = {
        # Present a choice; effects happen in options below
    }

    option = {
        name = warlord.1002.a
        # Become a warlord: gain the 'warlord' trait and create a decision to raise faction/claim
        add_trait = warlord
                if = {
            limit = { is_independent_ruler = no }
            liege = {
                add_opinion = {
                    target = root
                    modifier = warlord_rebellion_opinion
                }
            }
        }
        # If not a powerful vassal, remove any existing claims on liege's titles
        if = {
            limit = { NOT = { is_powerful_vassal = yes } }
            if = {
                limit = { exists = liege }
                liege = {
                    every_held_title = {
                        limit = { root = { has_claim_on = prev } }
                        root = { remove_claim = prev }
                    }
                }
            }
        }
    ai_chance = {
        base = 0
        modifier = {
            add = 100
            is_independent_ruler = no
            opinion = { target = liege value < 50 }
        }
    }
    # Immediately run the warlord action event for this new warlord (only for powerful vassals)
    if = {
        limit = { is_powerful_vassal = yes }
        trigger_event = { id = warlord.1003 }
    }
    }

    option = {
        name = warlord.1002.b
        # Remain loyal: boost relationzs with liege instead of adding trait
        if = {
            limit = { is_independent_ruler = no }
            liege = {
                add_opinion = {
                    target = root
                    modifier = warlord_loyalty_opinion
                }
            }
        }
        # small positive opinion or stability bonus could be added by scripted effects
        ai_chance = {
            base = 0
            modifier = {
                add = 100
                is_independent_ruler = yes
            }
            modifier = {
                add = 100
                is_independent_ruler = no
                opinion = { target = liege value >= 50 }
            }
        }
    }
}

# Warlord event: triggered for rulers with the warlord trait
warlord.1003 = {
    type = character_event
    title = warlord.1003.t
    desc = warlord.1003.d
    theme = realm

    left_portrait = liege
    right_portrait = root

    option = {
        name = warlord.1003.a
        ai_chance = {
            base = 0
            modifier = {
                add = -100
                is_independent_ruler = yes
            }
            modifier = {
                add = 100
                liege = {
                    has_variable = riseandfall_realm_stability_score
                    var:riseandfall_realm_stability_score < 49
                }
            }
        }
        # Give claims on the liege's own titles to the warlord (only for powerful vassals)
        if = {
            limit = { exists = liege }
            if = {
                # Only proceed for powerful vassals. Avoid scope:root context switches in tooltip
                # validation by using a single character-scoped token that is safe to evaluate.
                limit = { is_powerful_vassal = yes }
                liege = {
                    # Give claims only on the highest tier titles the liege holds
                    if = {
                        limit = { any_held_title = { tier = tier_hegemony } }
                        every_held_title = {
                            limit = {
                                tier = tier_hegemony
                                NOT = { root = { has_claim_on = prev } }
                            }
                            root = { add_unpressed_claim = prev }
                        }
                    }
                    else_if = {
                        limit = { any_held_title = { tier = tier_empire } }
                        every_held_title = {
                            limit = {
                                tier = tier_empire
                                NOT = { root = { has_claim_on = prev } }
                            }
                            root = { add_unpressed_claim = prev }
                        }
                    }
                    else_if = {
                        limit = { any_held_title = { tier = tier_kingdom } }
                        every_held_title = {
                            limit = {
                                tier = tier_kingdom
                                NOT = { root = { has_claim_on = prev } }
                            }
                            root = { add_unpressed_claim = prev }
                        }
                    }
                    else_if = {
                        limit = { any_held_title = { tier = tier_duchy } }
                        every_held_title = {
                            limit = {
                                tier = tier_duchy
                                NOT = { root = { has_claim_on = prev } }
                            }
                            root = { add_unpressed_claim = prev }
                        }
                    }
                    else = {
                        every_held_title = {
                            limit = {
                                tier = tier_county
                                NOT = { root = { has_claim_on = prev } }
                            }
                            root = { add_unpressed_claim = prev }
                        }
                    }
                    if = {
                            limit = { has_variable = riseandfall_realm_stability_score }
                            # Only apply legitimacy changes if this liege has a legitimacy system
                            if = {
                                limit = { var:riseandfall_realm_stability_score <= 40 }
                                if = {
                                    limit = { has_legitimacy = yes }
                                    add_legitimacy = { value = legitimacy divide = 98 multiply = -1 }
                                }
                            }
                        }
                        
                        add_opinion = {
                            target = root
                            modifier = warlord_rebellion_opinion
                        }
                }
            }
        }
    }
    option = {
        name = warlord.1003.b
        # Remove the warlord trait and abandon the path
        remove_trait = warlord
        ai_chance = {
            base = 0
            modifier = {
                add = 100
                opinion = { target = liege value >= 50 }
            }
            modifier = {
                add = 100
                liege = {
                    has_variable = riseandfall_realm_stability_score
                    var:riseandfall_realm_stability_score > 60
                }
            }
        }
        # If this character had claims on their liege's titles, remove them
        if = {
            limit = { exists = liege }
            liege = {
                every_held_title = {
                    limit = { root = { has_claim_on = prev } }
                    root = { remove_claim = prev }
                }
            }
        }
    }
}
